server:
  servlet:
    encoding:
      charset: utf-8
      force: true # 응답에 대해 UTF-8 문자 인코딩을 강제로 적용하게 됩니다.
  port: 8000 # 원하는 포트 번호로 변경, 예: 8000
  ssl:
    enabled: true
    key-store: keystore.p12
    key-store-password: ${KEY_STORE_PASSWORD}
    key-store-type: PKCS12
    key-alias: bns-ssl


spring:
  datasource:
    driver-class-name: org.h2.Driver # H2 인메모리 DB를 사용하는 경우
    url: jdbc:h2:mem:test;MODE=MySQL # H2 연결 URL 모드는 MySQL, 실제 서비스 시의 RDBMS는 MySQL로 설정
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update # 애플리케이션 시작 시 테이블을 자동으로 업데이트
    show-sql: true # SQL 쿼리 로깅 활성화
    database-platform: org.hibernate.dialect.MySQLDialect # MySQL 방식 사용
    properties:
      hibernate:
        format_sql: true # Hibernate이 SQL 쿼리를 로그에 출력할 때 이를 보기 쉽게 포맷팅
        default_batch_fetch_size: 100 # Hibernate의 기본 배치 페치 크기 설정

  application:
    name: LinkNamuApplication # 애플리케이션의 이름 설정

  h2:
    console:
      enabled: true # H2 데이터베이스 콘솔 활성화

  data:
    redis:
      port: 6379 # Redis 데이터베이스에 연결할 포트 번호
      host: localhost # Redis 데이터베이스에 연결할 호스트 주소


access-jwt-secret-key: KakaoTechCampusLinkNamu
refresh-jwt-secret-key: KakaoTechCampusLinkNamu1234

logging:
  level:
    org.springframework: INFO # Spring Framework 패키지의 로깅 레벨을 INFO로 설정
    com.example: DEBUG # com.example 패키지의 로깅 레벨을 DEBUG로 설정


oauth2:
  google:
    client_id: ${google-client-id}
    auth_uri: ${google-auth-uri}
    token_uri: ${google-token-uri}
    client_secret: ${google-client-secret}
    redirect_uri: ${google-redirect-uri}

  notion:
    client_id: ${NOTION_CLIENT_ID}
    auth_uri: ${NOTION_URL}
    secret: ${NOTION_SECRET}
    redirect_uri: https://localhost:8000/dev/notion/redirect

cloud:
  aws:
    s3:
      bucket: linknamu-image
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false

AES_SECRET_KEY: ${aes-secret-key}




